document.addEventListener('DOMContentLoaded', () => { includePartials(); applyInputMasks(); setupNiceValidationMessages(); }); function includePartials() { const headerEl = document.querySelector('header[data-include="header"]'); const footerEl = document.querySelector('footer[data-include="footer"]'); if (headerEl) { fetch('./partials/header.html') .then(res => res.text()) .then(html => { headerEl.innerHTML = html; }) .catch(() => { headerEl.innerHTML = '<div class="container"><p>Header</p></div>'; }); } if (footerEl) { fetch('./partials/footer.html') .then(res => res.text()) .then(html => { footerEl.innerHTML = html; }) .catch(() => { footerEl.innerHTML = '<div class="container"><p>Footer</p></div>'; }); } } function applyInputMasks() { document.querySelectorAll('input[data-mask="cpf"]').forEach(input => { input.setAttribute('maxlength', '14'); input.addEventListener('input', () => { let v = input.value.replace(/\D/g, ''); if (v.length > 11) v = v.slice(0, 11); let out = ''; if (v.length > 9) out = v.replace(/^(\d{3})(\d{3})(\d{3})(\d{0,2}).*/, '$1.$2.$3-$4'); else if (v.length > 6) out = v.replace(/^(\d{3})(\d{3})(\d{0,3}).*/, '$1.$2.$3'); else if (v.length > 3) out = v.replace(/^(\d{3})(\d{0,3}).*/, '$1.$2'); else out = v; input.value = out; }); }); document.querySelectorAll('input[data-mask="phone"]').forEach(input => { input.setAttribute('maxlength', '15'); input.addEventListener('input', () => { let v = input.value.replace(/\D/g, ''); if (v.length > 11) v = v.slice(0, 11); if (v.length > 10) { input.value = v.replace(/^(\d{2})(\d{5})(\d{0,4}).*/, '($1) $2-$3'); } else if (v.length > 6) { input.value = v.replace(/^(\d{2})(\d{4})(\d{0,4}).*/, '($1) $2-$3'); } else if (v.length > 2) { input.value = v.replace(/^(\d{2})(\d{0,5}).*/, '($1) $2'); } else { input.value = v; } }); }); document.querySelectorAll('input[data-mask="cep"]').forEach(input => { input.setAttribute('maxlength', '9'); input.addEventListener('input', () => { let v = input.value.replace(/\D/g, ''); if (v.length > 8) v = v.slice(0, 8); if (v.length > 5) { input.value = v.replace(/^(\d{5})(\d{0,3}).*/, '$1-$2'); } else { input.value = v; } }); }); } function setupNiceValidationMessages() { const forms = document.querySelectorAll('form[novalidate]'); forms.forEach(form => { form.addEventListener('submit', e => { if (!form.checkValidity()) { e.preventDefault(); form.querySelectorAll(':invalid')[0]?.reportValidity(); } }); form.querySelectorAll('input, select, textarea').forEach(el => { el.addEventListener('input', () => el.setCustomValidity('')); el.addEventListener('invalid', () => { if (el.validity.valueMissing) el.setCustomValidity('Este campo é obrigatório.'); else if (el.validity.typeMismatch) el.setCustomValidity('Formato inválido.'); else if (el.validity.patternMismatch) el.setCustomValidity('Formato inválido para este campo.'); else el.setCustomValidity(''); }); }); }); }