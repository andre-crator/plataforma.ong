document.addEventListener('DOMContentLoaded', () => { drawPie(); drawLine(); drawBar(); }); const COLORS = ['#6a5acd','#20b2aa','#ff7f50','#ffa500','#1e90ff','#32cd32']; function drawPie() { const canvas = document.getElementById('chartPie'); if (!canvas) return; const ctx = canvas.getContext('2d'); const labels = ['Acolhimento','PrevenÃ§Ã£o','JurÃ­dico','ReintegraÃ§Ã£o','GestÃ£o']; const data = [35, 20, 15, 20, 10 ]; const total = data.reduce((a,b)=>a+b,0); let startAngle = -Math.PI / 2; data.forEach((value, i) => { const sliceAngle = (value / total) * Math.PI * 2; ctx.beginPath(); ctx.moveTo(canvas.width/2, canvas.height/2); ctx.arc(canvas.width/2, canvas.height/2, 120, startAngle, startAngle + sliceAngle); ctx.closePath(); ctx.fillStyle = COLORS[i % COLORS.length]; ctx.fill(); const midAngle = startAngle + sliceAngle / 2; const lx = canvas.width/2 + Math.cos(midAngle) * 140; const ly = canvas.height/2 + Math.sin(midAngle) * 140; ctx.fillStyle = '#333'; ctx.font = '12px sans-serif'; ctx.textAlign = 'center'; ctx.fillText(${labels[i]} (${value}%), lx, ly); startAngle += sliceAngle; }); } function drawLine() { const canvas = document.getElementById('chartLine'); if (!canvas) return; const ctx = canvas.getContext('2d'); const labels = ['Jan','Fev','Mar','Abr','Mai','Jun','Jul','Ago','Set','Out','Nov','Dez']; const values = [ 10, 14, 18, 22, 30, 32, 40, 45, 48, 55, 60, 65 ]; const padding = 40; const w = canvas.width - padding * 2; const h = canvas.height - padding * 2; ctx.clearRect(0,0,canvas.width,canvas.height); ctx.fillStyle = '#fff'; ctx.fillRect(0,0,canvas.width,canvas.height); ctx.strokeStyle = '#888'; ctx.beginPath(); ctx.moveTo(padding, padding); ctx.lineTo(padding, canvas.height - padding); ctx.lineTo(canvas.width - padding, canvas.height - padding); ctx.stroke(); const maxV = Math.max(...values) * 1.1; const stepX = w / (labels.length - 1); ctx.strokeStyle = COLORS[0]; ctx.lineWidth = 2; ctx.beginPath(); values.forEach((v, i) => { const x = padding + i * stepX; const y = canvas.height - padding - (v / maxV) * h; if (i === 0) ctx.moveTo(x, y); else ctx.lineTo(x, y); ctx.fillStyle = COLORS[0]; ctx.beginPath(); ctx.arc(x, y, 3, 0, Math.PI*2); ctx.fill(); }); ctx.stroke(); ctx.fillStyle = '#333'; ctx.font = '11px sans-serif'; labels.forEach((lb, i) => { const x = padding + i * stepX; const y = canvas.height - padding + 14; ctx.textAlign = 'center'; ctx.fillText(lb, x, y); }); } function drawBar() { const canvas = document.getElementById('chartBar'); if (!canvas) return; const ctx = canvas.getContext('2d'); const labels = ['Norte','Nordeste','Centro-Oeste','Sudeste','Sul']; const values = [ 12, 20, 9, 28, 15 ]; const padding = 40; const w = canvas.width - padding * 2; const h = canvas.height - padding * 2; ctx.clearRect(0,0,canvas.width,canvas.height); ctx.strokeStyle = '#888'; ctx.beginPath(); ctx.moveTo(padding, padding); ctx.lineTo(padding, canvas.height - padding); ctx.lineTo(canvas.width - padding, canvas.height - padding); ctx.stroke(); const maxV = Math.max(...values) * 1.2; const barWidth = w / (values.length * 1.5); const gap = barWidth * 0.5; values.forEach((v, i) => { const x = padding + i * (barWidth + gap) + gap; const barH = (v / maxV) * h; const y = canvas.height - padding - barH; ctx.fillStyle = COLORS[(i+1) % COLORS.length]; ctx.fillRect(x, y, barWidth, barH); ctx.fillStyle = '#333'; ctx.font = '11px sans-serif'; ctx.textAlign = 'center'; ctx.fillText(labels[i], x + barWidth/2, canvas.height - padding + 14); ctx.fillText(v, x + barWidth/2, y - 4); }); }

